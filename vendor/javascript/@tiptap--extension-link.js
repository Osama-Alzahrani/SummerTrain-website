import{combineTransactionSteps as t,getChangedRanges as e,findChildrenInRange as n,getMarksBetween as r,getAttributes as o,mergeAttributes as i,markPasteRule as s,Mark as a}from"@tiptap/core";import{tokenize as l,find as u,registerCustomProtocol as d,reset as c}from"linkifyjs";import{PluginKey as p,Plugin as f}from"@tiptap/pm/state";function isValidLinkStructure(t){return t.length===1?t[0].isLink:!(t.length!==3||!t[1].isLink)&&["()","[]"].includes(t[0].value+t[2].value)}function autolink(o){return new f({key:new p("autolink"),appendTransaction:(i,s,a)=>{const u=i.some((t=>t.docChanged))&&!s.doc.eq(a.doc);const d=i.some((t=>t.getMeta("preventAutolink")));if(!u||d)return;const{tr:c}=a;const p=t(s.doc,[...i]);const f=e(p);f.forEach((({newRange:t})=>{const e=n(a.doc,t,(t=>t.isTextblock));let i;let s;if(e.length>1){i=e[0];s=a.doc.textBetween(i.pos,i.pos+i.node.nodeSize,void 0," ")}else if(e.length&&a.doc.textBetween(t.from,t.to," "," ").endsWith(" ")){i=e[0];s=a.doc.textBetween(i.pos,t.to,void 0," ")}if(i&&s){const t=s.split(" ").filter((t=>t!==""));if(t.length<=0)return false;const e=t[t.length-1];const n=i.pos+s.lastIndexOf(e);if(!e)return false;const u=l(e).map((t=>t.toObject()));if(!isValidLinkStructure(u))return false;u.filter((t=>t.isLink)).map((t=>({...t,from:n+t.start+1,to:n+t.end+1}))).filter((t=>!a.schema.marks.code||!a.doc.rangeHasMark(t.from,t.to,a.schema.marks.code))).filter((t=>!o.validate||o.validate(t.value))).forEach((t=>{r(t.from,t.to,a.doc).some((t=>t.mark.type===o.type))||c.addMark(t.from,t.to,o.type.create({href:t.href}))}))}}));return c.steps.length?c:void 0}})}function clickHandler(t){return new f({key:new p("handleClickLink"),props:{handleClick:(e,n,r)=>{var i,s;if(t.whenNotEditable&&e.editable)return false;if(r.button!==0)return false;let a=r.target;const l=[];while(a.nodeName!=="DIV"){l.push(a);a=a.parentNode}if(!l.find((t=>t.nodeName==="A")))return false;const u=o(e.state,t.type.name);const d=r.target;const c=(i=d===null||d===void 0?void 0:d.href)!==null&&i!==void 0?i:u.href;const p=(s=d===null||d===void 0?void 0:d.target)!==null&&s!==void 0?s:u.target;if(d&&c){window.open(c,p);return true}return false}}})}function pasteHandler(t){return new f({key:new p("handlePasteLink"),props:{handlePaste:(e,n,r)=>{const{state:o}=e;const{selection:i}=o;const{empty:s}=i;if(s)return false;let a="";r.content.forEach((t=>{a+=t.textContent}));const l=u(a).find((t=>t.isLink&&t.value===a));if(!a||!l)return false;t.editor.commands.setMark(t.type,{href:l.href});return true}}})}const h=/https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z]{2,}\b(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)/gi;const k=a.create({name:"link",priority:1e3,keepOnSplit:false,onCreate(){this.options.protocols.forEach((t=>{typeof t!=="string"?d(t.scheme,t.optionalSlashes):d(t)}))},onDestroy(){c()},inclusive(){return this.options.autolink},addOptions(){return{openOnClick:true,linkOnPaste:true,autolink:true,protocols:[],HTMLAttributes:{target:"_blank",rel:"noopener noreferrer nofollow",class:null},validate:void 0}},addAttributes(){return{href:{default:null},target:{default:this.options.HTMLAttributes.target},rel:{default:this.options.HTMLAttributes.rel},class:{default:this.options.HTMLAttributes.class}}},parseHTML(){return[{tag:'a[href]:not([href *= "javascript:" i])'}]},renderHTML({HTMLAttributes:t}){var e;return((e=t.href)===null||e===void 0?void 0:e.startsWith("javascript:"))?["a",i(this.options.HTMLAttributes,{...t,href:""}),0]:["a",i(this.options.HTMLAttributes,t),0]},addCommands(){return{setLink:t=>({chain:e})=>e().setMark(this.name,t).setMeta("preventAutolink",true).run(),toggleLink:t=>({chain:e})=>e().toggleMark(this.name,t,{extendEmptyMarkRange:true}).setMeta("preventAutolink",true).run(),unsetLink:()=>({chain:t})=>t().unsetMark(this.name,{extendEmptyMarkRange:true}).setMeta("preventAutolink",true).run()}},addPasteRules(){return[s({find:t=>{const e=[];if(t){const n=u(t).filter((t=>t.isLink));n.length&&n.forEach((t=>e.push({text:t.value,data:{href:t.href},index:t.start})))}return e},type:this.type,getAttributes:t=>{var e;return{href:(e=t.data)===null||e===void 0?void 0:e.href}}})]},addProseMirrorPlugins(){const t=[];this.options.autolink&&t.push(autolink({type:this.type,validate:this.options.validate}));this.options.openOnClick&&t.push(clickHandler({type:this.type,whenNotEditable:this.options.openOnClick==="whenNotEditable"}));this.options.linkOnPaste&&t.push(pasteHandler({editor:this.editor,type:this.type}));return t}});export{k as Link,k as default,h as pasteRegex};

